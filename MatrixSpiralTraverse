class Solution:
    # @param A : tuple of list of integers
    # @return a list of integers
    def spiralOrder(self, A):
        result = []
        height=len(A)
        width=len(A[0])
        direction = 1
        row=0
        col=0
        counter=0
        matrix_size=width*height
        # print matrix_size
        for i in range(0,matrix_size):
            # print "iteration %d:"%i
            if(direction==1):
                if(col<(width-counter)):
                    # print A[row][col]
                    result.append(A[row][col])
                    col+=1
                else:
                    direction=2
                    row+=1
                    col-=1
                    # print A[row][col]
                    result.append(A[row][col])
                    row+=1
            elif(direction==2):
                if(row<(height-counter)):
                    # print A[row][col]
                    result.append(A[row][col])
                    row+=1
                else:
                    direction=3
                    col-=1
                    row-=1
                    # print A[row][col]
                    result.append(A[row][col])
                    col-=1
            elif(direction==3):
                if(col>=(0+counter)):
                    # print A[row][col]
                    result.append(A[row][col])
                    col-=1
                else:
                    direction=4
                    row-=1
                    col+=1
                    # print A[row][col]
                    result.append(A[row][col])
                    row-=1
                    # increment the counter to indicate one 360 rotation of matrix is completed.
                    counter+=1
            # elif(direction==4):
            else:
                if(row>=(0+counter)):
                    # print A[row][col]
                    result.append(A[row][col])
                    row-=1
                else:
                    direction=1
                    col+=1
                    row+=1
                    # print A[row][col]
                    result.append(A[row][col])
                    col+=1
                    # print "row and col %d %d"%(row,col)
        ## Actual code to populate result
        return result
